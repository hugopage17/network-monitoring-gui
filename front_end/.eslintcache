[{"C:\\Users\\HPage\\wandel\\front_end\\src\\index.js":"1","C:\\Users\\HPage\\wandel\\front_end\\src\\App.js":"2","C:\\Users\\HPage\\wandel\\front_end\\src\\reportWebVitals.js":"3","C:\\Users\\HPage\\wandel\\front_end\\src\\Main.js":"4","C:\\Users\\HPage\\wandel\\front_end\\src\\Fire.js":"5","C:\\Users\\HPage\\wandel\\front_end\\src\\redux\\index.js":"6","C:\\Users\\HPage\\wandel\\front_end\\src\\redux\\actions.js":"7","C:\\Users\\HPage\\wandel\\front_end\\src\\components\\Sidebar.js":"8","C:\\Users\\HPage\\wandel\\front_end\\src\\components\\NetworkPanel.js":"9","C:\\Users\\HPage\\wandel\\front_end\\src\\components\\sub_components\\NodeView.js":"10","C:\\Users\\HPage\\wandel\\front_end\\src\\components\\sub_components\\NetworkOverview.js":"11","C:\\Users\\HPage\\wandel\\front_end\\src\\components\\sub_components\\Pulse.js":"12","C:\\Users\\HPage\\wandel\\front_end\\src\\components\\sub_components\\LatencyGraph.js":"13","C:\\Users\\HPage\\wandel\\front_end\\src\\components\\sub_components\\PingHistory.js":"14","C:\\Users\\HPage\\wandel\\front_end\\src\\components\\sub_components\\Traceroute.js":"15","C:\\Users\\HPage\\wandel\\front_end\\src\\components\\sub_components\\LatencyStats.js":"16","C:\\Users\\HPage\\wandel\\front_end\\src\\functions\\index.js":"17","C:\\Users\\HPage\\wandel\\front_end\\src\\components\\Logs.js":"18","C:\\Users\\HPage\\wandel\\front_end\\src\\components\\sub_components\\ToggleSwitch.js":"19","C:\\Users\\HPage\\wandel\\front_end\\src\\components\\sub_components\\Map.js":"20","C:\\Users\\HPage\\wandel\\front_end\\src\\components\\Loader.js":"21","C:\\Users\\HPage\\wandel\\front_end\\src\\components\\sub_components\\AddPanels\\AddNetwork.js":"22","C:\\Users\\HPage\\wandel\\front_end\\src\\components\\sub_components\\AddPanels\\AddNode.js":"23","C:\\Users\\HPage\\wandel\\front_end\\src\\components\\sub_components\\AddPanels\\IPScan.js":"24","C:\\Users\\HPage\\wandel\\front_end\\src\\components\\sub_components\\AddPanels\\AddSingleNode.js":"25","C:\\Users\\HPage\\wandel\\front_end\\src\\styleComponents\\index.js":"26","C:\\Users\\HPage\\wandel\\front_end\\src\\components\\sub_components\\AddPanels\\NodesToAdd.js":"27","C:\\Users\\HPage\\wandel\\front_end\\src\\components\\sub_components\\AddPanels\\AddSubnet.js":"28","C:\\Users\\HPage\\wandel\\front_end\\src\\components\\sub_components\\Ssh.js":"29","C:\\Users\\HPage\\wandel\\front_end\\src\\components\\sub_components\\Settings.js":"30"},{"size":500,"mtime":499162500000,"results":"31","hashOfConfig":"32"},{"size":213,"mtime":1610055464539,"results":"33","hashOfConfig":"32"},{"size":362,"mtime":499162500000,"results":"34","hashOfConfig":"32"},{"size":1410,"mtime":1610250031771,"results":"35","hashOfConfig":"32"},{"size":518,"mtime":1608434229802,"results":"36","hashOfConfig":"32"},{"size":1202,"mtime":1610406196460,"results":"37","hashOfConfig":"32"},{"size":597,"mtime":1610406156915,"results":"38","hashOfConfig":"32"},{"size":2515,"mtime":1611490682276,"results":"39","hashOfConfig":"32"},{"size":498,"mtime":1609971607527,"results":"40","hashOfConfig":"32"},{"size":3266,"mtime":1611489874897,"results":"41","hashOfConfig":"32"},{"size":5653,"mtime":1611491426321,"results":"42","hashOfConfig":"32"},{"size":257,"mtime":1608506355093,"results":"43","hashOfConfig":"32"},{"size":2314,"mtime":1610059948688,"results":"44","hashOfConfig":"32"},{"size":887,"mtime":1610229005758,"results":"45","hashOfConfig":"32"},{"size":1010,"mtime":1608767280710,"results":"46","hashOfConfig":"32"},{"size":954,"mtime":1611484206904,"results":"47","hashOfConfig":"32"},{"size":1913,"mtime":1610251265293,"results":"48","hashOfConfig":"32"},{"size":868,"mtime":1608960202158,"results":"49","hashOfConfig":"32"},{"size":600,"mtime":1608960707834,"results":"50","hashOfConfig":"32"},{"size":1533,"mtime":1610317956848,"results":"51","hashOfConfig":"32"},{"size":193,"mtime":1609990058300,"results":"52","hashOfConfig":"32"},{"size":1380,"mtime":1610250235034,"results":"53","hashOfConfig":"32"},{"size":2703,"mtime":1610406267645,"results":"54","hashOfConfig":"32"},{"size":2061,"mtime":1610405434907,"results":"55","hashOfConfig":"32"},{"size":2228,"mtime":1610490117884,"results":"56","hashOfConfig":"32"},{"size":266,"mtime":1610250140004,"results":"57","hashOfConfig":"32"},{"size":1913,"mtime":1610489011834,"results":"58","hashOfConfig":"32"},{"size":1401,"mtime":1610414519696,"results":"59","hashOfConfig":"32"},{"size":841,"mtime":1611152215172,"results":"60","hashOfConfig":"32"},{"size":1019,"mtime":1611490063090,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"uimo23",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"64"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\HPage\\wandel\\front_end\\src\\index.js",[],["132","133"],"C:\\Users\\HPage\\wandel\\front_end\\src\\App.js",[],"C:\\Users\\HPage\\wandel\\front_end\\src\\reportWebVitals.js",[],"C:\\Users\\HPage\\wandel\\front_end\\src\\Main.js",["134"],"import './stylesheets/App.css'\r\nimport {useState, useEffect} from 'react'\r\nimport socketIOClient from 'socket.io-client'\r\nimport Sidebar from './components/Sidebar'\r\nimport NetworkPanel from './components/NetworkPanel'\r\nimport AddNode from './components/sub_components/AddPanels/AddNode'\r\nimport { useDispatch } from 'react-redux'\r\nimport {setSocket, setUser, getAppData} from './redux/actions'\r\nimport fire from './Fire.js'\r\n\r\nfunction Main() {\r\n  const socket = socketIOClient('http://localhost:5000')\r\n  const dispatch = useDispatch()\r\n  const saveSocket = (socket) => dispatch(setSocket(socket))\r\n  const getUser = (user) => dispatch(setUser(user))\r\n  const setAppData = (data) => dispatch(getAppData(data))\r\n\r\n  const [nodeAdd, openNodeAdd] = useState(true)\r\n\r\n  useEffect(() => {\r\n    saveSocket(socket)\r\n    return fire.auth().onAuthStateChanged(user => {\r\n      if(user){\r\n        getUser(user)\r\n        fire.firestore().collection(\"users\").doc(user.uid).onSnapshot((doc) => {\r\n          const data = doc.data()\r\n          setAppData(data)\r\n        })\r\n      }\r\n    })\r\n  },[])\r\n\r\n  const openAddPanel = () => {\r\n    openNodeAdd(nodeAdd => !nodeAdd)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {Sidebar()}\r\n      <div id='main-panel'>\r\n        {NetworkPanel(openAddPanel)}\r\n      </div>\r\n      <div hidden={nodeAdd}>\r\n        {AddNode(openAddPanel)}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Main;\r\n","C:\\Users\\HPage\\wandel\\front_end\\src\\Fire.js",[],"C:\\Users\\HPage\\wandel\\front_end\\src\\redux\\index.js",[],"C:\\Users\\HPage\\wandel\\front_end\\src\\redux\\actions.js",[],"C:\\Users\\HPage\\wandel\\front_end\\src\\components\\Sidebar.js",["135","136","137"],"C:\\Users\\HPage\\wandel\\front_end\\src\\components\\NetworkPanel.js",[],"C:\\Users\\HPage\\wandel\\front_end\\src\\components\\sub_components\\NodeView.js",["138","139","140","141"],"C:\\Users\\HPage\\wandel\\front_end\\src\\components\\sub_components\\NetworkOverview.js",["142","143","144","145","146","147","148"],"C:\\Users\\HPage\\wandel\\front_end\\src\\components\\sub_components\\Pulse.js",[],"C:\\Users\\HPage\\wandel\\front_end\\src\\components\\sub_components\\LatencyGraph.js",["149"],"import React,{Component} from 'react'\r\nimport { Line } from 'react-chartjs-2'\r\n\r\nclass LatencyGraph extends Component{\r\n\r\n\r\n  render(){\r\n    return(\r\n      <div id='ping-graph-container'>\r\n        <Line data={\r\n          {\r\n            labels:this.props.labels,\r\n            datasets:[\r\n              {\r\n                label:'Latency ms',\r\n                data:this.props.times,\r\n                yAxisID: 'latency',\r\n                fill:true,\r\n                borderColor:'rgba(92, 214, 255, 1)',\r\n                backgroundColor:'rgba(92, 214, 255, 0.25)',\r\n                borderWidth:1\r\n              },\r\n              {\r\n                label:'Packet Loss (%)',\r\n                data:this.props.loss,\r\n                yAxisID: 'loss',\r\n                fill:false,\r\n                borderColor:'rgba(222, 0, 0, 1)',\r\n                borderWidth:2\r\n              }\r\n            ]\r\n          }\r\n        } height={90} options={\r\n          {\r\n            maintainAspectRatio: true,animation: false, responsive:true,\r\n            scales: {\r\n              xAxes: [{\r\n                gridLines: {\r\n                  color: 'rgba(32, 32, 32, 0.3)',\r\n                  lineWidth: 1\r\n                }\r\n              }],\r\n              yAxes: [{\r\n                id:'latency',\r\n                position:'left',\r\n                gridLines: {\r\n                  color: 'rgba(32, 32, 32, 0.3)',\r\n                  lineWidth: 1\r\n                },\r\n                scaleLabel: {\r\n                  display: true,\r\n                  labelString: 'Response (ms)'\r\n                }\r\n              },\r\n              {\r\n                id:'loss',\r\n                position:'right',\r\n                ticks: {\r\n                  stepSize: 10,\r\n                  beginAtZero: true,\r\n                },\r\n                gridLines: {\r\n                  color: 'rgba(32, 32, 32, 0.3)',\r\n                  lineWidth: 1\r\n                },\r\n                scaleLabel: {\r\n                  display: true,\r\n                  labelString: 'Packet Loss (%)'\r\n                },\r\n                ticks: {\r\n                  beginAtZero:true,\r\n                  min: 0,\r\n                  max: 100\r\n                }\r\n              }],\r\n            }\r\n          }\r\n        }/>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default LatencyGraph\r\n","C:\\Users\\HPage\\wandel\\front_end\\src\\components\\sub_components\\PingHistory.js",[],"C:\\Users\\HPage\\wandel\\front_end\\src\\components\\sub_components\\Traceroute.js",[],"C:\\Users\\HPage\\wandel\\front_end\\src\\components\\sub_components\\LatencyStats.js",[],"C:\\Users\\HPage\\wandel\\front_end\\src\\functions\\index.js",["150"],"export const getMin = (min, value) => {\r\n  if(value < min || min === 0){\r\n    min = value\r\n  }\r\n  return min\r\n}\r\n\r\nexport const getMax = (max, value) => {\r\n  if(value > max || max === 0){\r\n    max = value\r\n  }\r\n  return max\r\n}\r\n\r\nexport const getAvg = (times) => {\r\n  let total = 0\r\n  for (var i = 0; i < times.length; i++) {\r\n    if(!isNaN(times[1])){\r\n      total+=Number(times[i])\r\n    }\r\n  }\r\n  let avg = total/Number(times.length)\r\n  return Math.round(avg * 100) / 100\r\n}\r\n\r\nexport const responseTime = (res) => {\r\n  let response = res\r\n  if(response === 'unknownms')response = 'Unreachable'\r\n  return response\r\n}\r\n\r\nexport const apiCall = async(dir, method, body, id) => {\r\n  let options\r\n  if(method === 'GET'){\r\n    options = {\r\n      method:method,\r\n      headers:{\r\n        'Authorization':id,\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }\r\n  }\r\n  else if(method === 'POST'){\r\n    options = {\r\n      method:method,\r\n      headers:{\r\n        'Authorization':id,\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body:JSON.stringify(body)\r\n    }\r\n  }\r\n  let res = await fetch(`http://localhost:7000/${dir}`, options)\r\n  let data = await res.json()\r\n  return data\r\n}\r\n\r\nexport const isEven = (index) => {\r\n  if ((index+1)%2 === 0)\r\n    return 'even';\r\n  else\r\n    return 'odd';\r\n}\r\n\r\nexport const getRange = (range) => {\r\n  if(range.includes('-') === false)\r\n    throw new Error('Invalid IP Range, e.g(192.168.1.1-254)')\r\n  if(!range)\r\n    throw new Error('IP Range cannot be null, e.g(192.168.1.1-254)')\r\n  var array = []\r\n  let network = range.split('-')[0]\r\n  var max = range.split('-')[1]\r\n  if(max > 255)\r\n    throw new Error('Invalid IP Range, e.g(192.168.1.1-254)')\r\n  const min = network.split('.')[3]\r\n  let total = 0\r\n  for (var i = min; i <= max; i++) {\r\n    total++\r\n  }\r\n  return total\r\n}\r\n","C:\\Users\\HPage\\wandel\\front_end\\src\\components\\Logs.js",["151","152"],"C:\\Users\\HPage\\wandel\\front_end\\src\\components\\sub_components\\ToggleSwitch.js",["153","154","155","156"],"import '../../stylesheets/toggle-switch.css'\r\nimport { useDispatch } from 'react-redux'\r\nimport {useState, useEffect} from 'react'\r\n\r\nfunction ToggleSwitch(){\r\n  const dispatch = useDispatch()\r\n  const [switchState, toggleState] = useState(false)\r\n\r\n\r\n  useEffect(()=>{\r\n    document.getElementById('main-check').checked = true\r\n  },[])\r\n\r\n  return(\r\n    <label class=\"switch\">\r\n      <input type=\"checkbox\" id='main-check'  onChange={(e)=>{\r\n        const value = e.target.checked\r\n        \r\n      }}/>\r\n      <span class=\"slider round\"></span>\r\n    </label>\r\n  )\r\n}\r\n\r\nexport default ToggleSwitch\r\n","C:\\Users\\HPage\\wandel\\front_end\\src\\components\\sub_components\\Map.js",["157"],"import { GoogleMap, Marker, withScriptjs, withGoogleMap } from \"react-google-maps\"\r\nimport React,{Component} from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport {map} from 'underscore'\r\n\r\nfunction Map(){\r\n  const network = useSelector((state) => state.currentNetwork)\r\n  const nodeStatus = useSelector((state) => state.nodeStatus)\r\n  return(\r\n    <GoogleMap\r\n      defaultZoom={12}\r\n      defaultCenter={{ lat: network.nodes[0].lat, lng:network.nodes[0].long }}\r\n    >\r\n    {map(network.nodes, node => {\r\n      let icon\r\n      const index = network.nodes.indexOf(node)\r\n      try{\r\n        nodeStatus[index].status === 'online' ? (icon = 'green-dot.png'):(icon = 'red-dot.png')\r\n      }catch(err){}\r\n      return(\r\n        <Marker position={{ lat: node.lat, lng: node.long }} icon={{\r\n          url: `http://maps.google.com/mapfiles/ms/icons/${icon}`\r\n        }}/>\r\n      )\r\n    })}\r\n  </GoogleMap>\r\n  )\r\n}\r\n\r\nconst WrapperMap = withScriptjs(withGoogleMap(Map))\r\n\r\nclass MapDisplay extends Component{\r\n  constructor(props){\r\n    super(props)\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div>\r\n        <WrapperMap\r\n          googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyCw1pRYGsH-ls0l3N8aFqR2o-HH69840Yo&v=3.exp&libraries=geometry,drawing,places\"\r\n          loadingElement={<div style={{ height: `100%` }} />}\r\n          containerElement={<div style={{ height: `95vh` }} />}\r\n          mapElement={<div style={{ height: `100%` }} />}\r\n\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MapDisplay\r\n","C:\\Users\\HPage\\wandel\\front_end\\src\\components\\Loader.js",[],"C:\\Users\\HPage\\wandel\\front_end\\src\\components\\sub_components\\AddPanels\\AddNetwork.js",[],"C:\\Users\\HPage\\wandel\\front_end\\src\\components\\sub_components\\AddPanels\\AddNode.js",[],"C:\\Users\\HPage\\wandel\\front_end\\src\\components\\sub_components\\AddPanels\\IPScan.js",["158"],"import {apiCall, getRange} from '../../../functions'\r\nimport {useState, useEffect} from 'react'\r\nimport socketIOClient from 'socket.io-client'\r\nimport {inputStyle, butStyle, style} from '../../../styleComponents'\r\nimport NodesToAdd from './NodesToAdd'\r\n\r\nfunction IPScan(id, index, complete){\r\n\r\n  const [range, setRange] = useState('192.168.1.194-198')\r\n  const [width, setWidth] = useState(0)\r\n  const [loadbar, hidebar] = useState(true)\r\n  const socket = socketIOClient('http://localhost:5000')\r\n  const [node, addNode] = useState([])\r\n  const [i, addI] = useState(0)\r\n  const [total, setTotal] = useState(0)\r\n  const [switchPanel, toggle] = useState(true)\r\n\r\n\r\n  useEffect(()=>{\r\n    socket.on('start-scan', (data)=>{\r\n      addI(i => i+=1)\r\n      if(data.status === 'online'){\r\n        addNode(node => [...node, data])\r\n      }\r\n      let p = 1/getRange(range)\r\n      setTotal(total => getRange(range))\r\n      p = p*100\r\n      setWidth(width => width+=p)\r\n    })\r\n    socket.on('end-scan', (data)=>{toggle(switchPanel => !switchPanel)})\r\n  })\r\n\r\n  const scan = () => {\r\n    hidebar(loadbar => false)\r\n    socket.emit('start-scan', range)\r\n  }\r\n\r\n  const end = () => {\r\n    complete().then((res)=>{\r\n      toggle(switchPanel => !switchPanel)\r\n    })\r\n  }\r\n\r\n\r\n  return(\r\n    <div>\r\n      {switchPanel ? (\r\n        <div style={style}>\r\n          <div style={{paddingBottom:15}}>\r\n            <input type='text' class='input-1' placeholder='IP Range (e.g 192.168.1.0-254)' style={inputStyle} onChange={(e)=>{\r\n              const n = e.target.value\r\n              setRange(range => n)\r\n            }}/><br/>\r\n            <button class='but-1' style={butStyle} onClick={scan}>Submit</button>\r\n          </div>\r\n          <div id=\"myProgress\" hidden={loadbar}>\r\n            <label style={{float:'left',margin:5}}>Scanning {i}/{total}</label>\r\n            <div id=\"myBar\" style={{width:`${width}%`}}></div>\r\n          </div>\r\n        </div>\r\n      ):(<NodesToAdd nodes={node} id={id} network={index} close={end}/>)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default IPScan\r\n","C:\\Users\\HPage\\wandel\\front_end\\src\\components\\sub_components\\AddPanels\\AddSingleNode.js",["159"],"import {apiCall} from '../../../functions'\r\nimport {useState, useEffect} from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {setNetwork} from '../../../redux/actions'\r\nimport {inputStyle, butStyle, style} from '../../../styleComponents'\r\n\r\nfunction AddSingleNode(close){\r\n\r\n  const [name, setName] = useState('Test')\r\n  const [ip, setIP] = useState('192.168.1.254')\r\n  const [lat, setlat] = useState(0)\r\n  const [long, setlong] = useState(0)\r\n  const user = useSelector((state) => state.user)\r\n  const network = useSelector((state) => state.currentNetwork)\r\n  const networks = useSelector((state) => state.appData.networks)\r\n\r\n  const dispatch = useDispatch()\r\n  const selectNetwork = (network) => dispatch(setNetwork(network))\r\n\r\n  const add = () => {\r\n    let index = networks.indexOf(network)\r\n    const body = {\r\n      name:name,\r\n      address:ip,\r\n      lat:lat,\r\n      long:long,\r\n      network:index\r\n    }\r\n    apiCall('addnode', 'POST', body, user.uid).then((res)=>{\r\n      const index = networks.indexOf(network)\r\n      apiCall(`reload?index=${index}`, 'GET' , {}, user.uid).then((res)=>{\r\n        selectNetwork(res.response)\r\n        close()\r\n      })\r\n    })\r\n  }\r\n\r\n  return(\r\n    <div style={style}>\r\n      <div style={{paddingBottom:15}}>\r\n        <input type='text' class='input-1' placeholder='Node name' style={inputStyle} onChange={(e)=>{\r\n          const n = e.target.value\r\n          setName(name => n)\r\n        }}/><br/>\r\n        <input type='text' class='input-1' placeholder='Management IP' style={inputStyle} onChange={(e)=>{\r\n          const n = e.target.value\r\n          setIP(ip => n)\r\n        }}/><br/>\r\n      </div>\r\n      <div style={{paddingTop:15}}>\r\n        <input type='text' class='input-1' placeholder='Latitude' style={inputStyle} onChange={(e)=>{\r\n          const n = e.target.value\r\n          setlat(lat => n)\r\n        }}/><br/>\r\n        <input type='text' class='input-1' placeholder='Longitude' style={inputStyle} onChange={(e)=>{\r\n          const n = e.target.value\r\n          setlong(long => n)\r\n        }}/><br/>\r\n      </div>\r\n      <button class='but-1' style={butStyle} onClick={add}>Submit</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddSingleNode\r\n","C:\\Users\\HPage\\wandel\\front_end\\src\\styleComponents\\index.js",[],"C:\\Users\\HPage\\wandel\\front_end\\src\\components\\sub_components\\AddPanels\\NodesToAdd.js",["160","161","162","163","164"],"import React, {Component} from 'react'\r\nimport {map} from 'underscore'\r\nimport '../../../stylesheets/add.css'\r\nimport {butStyle} from '../../../styleComponents'\r\nimport {apiCall} from '../../../functions'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport {setNetwork} from '../../../redux/actions'\r\n\r\nclass NodesToAdd extends Component{\r\n  constructor(props){\r\n    super(props)\r\n  }\r\n\r\n  addNodes = async() => {\r\n    const nodes = this.props.nodes\r\n    var body = {\r\n      nodes:nodes,\r\n      network:this.props.network\r\n    }\r\n    const upload = await apiCall('multiadd', 'POST', body, this.props.id)\r\n    this.props.close()\r\n  }\r\n\r\n  render(){\r\n    const nodes = this.props.nodes\r\n    return(\r\n      <div class='nodes-to-add'>\r\n        <div class='all-nodes-found'>\r\n          {map(nodes, n => {\r\n            const index = nodes.indexOf(n)+1\r\n            return(\r\n              <div class='each-found-node'>\r\n                <div>\r\n                  <label>Node {index}</label>\r\n                </div>\r\n                <input type='text' value={n.host} class='input-1'/><br/>\r\n                <input type='text' placeholder='Name' class='input-1' onChange={(e)=>{\r\n                  const val = e.target.value\r\n                  n.name = val\r\n                }}/><br/>\r\n                <input type='text' placeholder='Latitude' class='input-1' onChange={(e)=>{\r\n                  const val = e.target.value\r\n                  n.lat = val\r\n                }}/><br/>\r\n                <input type='text' placeholder='Longtitude' class='input-1' onChange={(e)=>{\r\n                  const val = e.target.value\r\n                  n.long = val\r\n                }}/><br/>\r\n              </div>\r\n            )\r\n          })}\r\n          <button class='but-1' style={{...butStyle, width:'93%'}} onClick={this.addNodes}>Submit</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NodesToAdd\r\n","C:\\Users\\HPage\\wandel\\front_end\\src\\components\\sub_components\\AddPanels\\AddSubnet.js",["165","166"],"import socketIOClient from 'socket.io-client'\r\nimport {inputStyle, butStyle, style} from '../../../styleComponents'\r\nimport {useState, useEffect} from 'react'\r\nimport NodesToAdd from './NodesToAdd'\r\nimport {apiCall} from '../../../functions'\r\nimport {setNetwork} from '../../../redux/actions'\r\n\r\nfunction AddSubnet(id, index, complete){\r\n  const socket = socketIOClient('http://localhost:5000')\r\n  const [toggle, setToggle] = useState(true)\r\n  const [nodes, addNode] = useState([])\r\n  const [subnet, setNet] = useState('')\r\n\r\n  useEffect(()=>{\r\n    socket.on('scan-subnet', (data)=>{\r\n      addNode(nodes => [...nodes, data])\r\n    })\r\n    socket.on('end-subnet', (data)=>{setToggle(toggle => !toggle)})\r\n  })\r\n\r\n  const start = () => {\r\n    socket.emit('scan-subnet', subnet)\r\n  }\r\n\r\n  const end = () => {\r\n    complete().then((res)=>{\r\n      setToggle(toggle => !toggle)\r\n    })\r\n  }\r\n\r\n\r\n  return(\r\n    <div>\r\n      {toggle ? (\r\n        <div style={style}>\r\n          <input type='text' class='input-1' placeholder='Subnet (e.g 192.168.1.0/24)' style={inputStyle} onChange={(e)=>{\r\n            let val = e.target.value\r\n            setNet(subnet => val)\r\n          }}/><br/>\r\n          <button class='but-1'  style={butStyle} onClick={start}>Submit</button>\r\n        </div>\r\n      ):(<NodesToAdd nodes={nodes} id={id} network={index} close={end}/>)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddSubnet\r\n","C:\\Users\\HPage\\wandel\\front_end\\src\\components\\sub_components\\Ssh.js",[],"C:\\Users\\HPage\\wandel\\front_end\\src\\components\\sub_components\\Settings.js",["167"],{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","severity":1,"message":"173","line":31,"column":5,"nodeType":"174","endLine":31,"endColumn":7,"suggestions":"175"},{"ruleId":"176","severity":1,"message":"177","line":43,"column":9,"nodeType":"178","messageId":"179","endLine":43,"endColumn":22},{"ruleId":"176","severity":1,"message":"180","line":54,"column":17,"nodeType":"178","messageId":"179","endLine":54,"endColumn":22},{"ruleId":"181","severity":1,"message":"182","line":59,"column":15,"nodeType":"183","endLine":59,"endColumn":72},{"ruleId":"176","severity":1,"message":"184","line":8,"column":8,"nodeType":"178","messageId":"179","endLine":8,"endColumn":11},{"ruleId":"172","severity":1,"message":"185","line":25,"column":3,"nodeType":"178","endLine":25,"endColumn":12,"suggestions":"186"},{"ruleId":"181","severity":1,"message":"182","line":67,"column":86,"nodeType":"183","endLine":67,"endColumn":119},{"ruleId":"181","severity":1,"message":"182","line":75,"column":11,"nodeType":"183","endLine":75,"endColumn":169},{"ruleId":"176","severity":1,"message":"187","line":10,"column":10,"nodeType":"178","messageId":"179","endLine":10,"endColumn":18},{"ruleId":"176","severity":1,"message":"188","line":11,"column":8,"nodeType":"178","messageId":"179","endLine":11,"endColumn":20},{"ruleId":"176","severity":1,"message":"189","line":17,"column":20,"nodeType":"178","messageId":"179","endLine":17,"endColumn":27},{"ruleId":"190","severity":1,"message":"191","line":72,"column":14,"nodeType":"178","messageId":"192","endLine":72,"endColumn":15},{"ruleId":"190","severity":1,"message":"191","line":78,"column":14,"nodeType":"178","messageId":"192","endLine":78,"endColumn":15},{"ruleId":"190","severity":1,"message":"191","line":81,"column":14,"nodeType":"178","messageId":"192","endLine":81,"endColumn":15},{"ruleId":"190","severity":1,"message":"191","line":86,"column":14,"nodeType":"178","messageId":"192","endLine":86,"endColumn":15},{"ruleId":"193","severity":1,"message":"194","line":70,"column":17,"nodeType":"195","messageId":"196","endLine":70,"endColumn":22},{"ruleId":"176","severity":1,"message":"197","line":72,"column":7,"nodeType":"178","messageId":"179","endLine":72,"endColumn":12},{"ruleId":"198","severity":1,"message":"199","line":16,"column":9,"nodeType":"200","messageId":"201","endLine":16,"endColumn":15},{"ruleId":"198","severity":1,"message":"199","line":19,"column":9,"nodeType":"200","messageId":"201","endLine":19,"endColumn":15},{"ruleId":"176","severity":1,"message":"202","line":6,"column":9,"nodeType":"178","messageId":"179","endLine":6,"endColumn":17},{"ruleId":"176","severity":1,"message":"203","line":7,"column":10,"nodeType":"178","messageId":"179","endLine":7,"endColumn":21},{"ruleId":"176","severity":1,"message":"204","line":7,"column":23,"nodeType":"178","messageId":"179","endLine":7,"endColumn":34},{"ruleId":"176","severity":1,"message":"205","line":17,"column":15,"nodeType":"178","messageId":"179","endLine":17,"endColumn":20},{"ruleId":"206","severity":1,"message":"207","line":33,"column":3,"nodeType":"208","messageId":"209","endLine":35,"endColumn":4},{"ruleId":"176","severity":1,"message":"210","line":1,"column":9,"nodeType":"178","messageId":"179","endLine":1,"endColumn":16},{"ruleId":"176","severity":1,"message":"211","line":2,"column":19,"nodeType":"178","messageId":"179","endLine":2,"endColumn":28},{"ruleId":"176","severity":1,"message":"212","line":6,"column":9,"nodeType":"178","messageId":"179","endLine":6,"endColumn":20},{"ruleId":"176","severity":1,"message":"213","line":6,"column":22,"nodeType":"178","messageId":"179","endLine":6,"endColumn":33},{"ruleId":"176","severity":1,"message":"214","line":7,"column":9,"nodeType":"178","messageId":"179","endLine":7,"endColumn":19},{"ruleId":"206","severity":1,"message":"207","line":10,"column":3,"nodeType":"208","messageId":"209","endLine":12,"endColumn":4},{"ruleId":"176","severity":1,"message":"215","line":20,"column":11,"nodeType":"178","messageId":"179","endLine":20,"endColumn":17},{"ruleId":"176","severity":1,"message":"210","line":5,"column":9,"nodeType":"178","messageId":"179","endLine":5,"endColumn":16},{"ruleId":"176","severity":1,"message":"214","line":6,"column":9,"nodeType":"178","messageId":"179","endLine":6,"endColumn":19},{"ruleId":"206","severity":1,"message":"207","line":5,"column":3,"nodeType":"208","messageId":"209","endLine":7,"endColumn":4},"no-native-reassign",["216"],"no-negated-in-lhs",["217"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getUser', 'saveSocket', 'setAppData', and 'socket'. Either include them or remove the dependency array.","ArrayExpression",["218"],"no-unused-vars","'deleteNetwork' is assigned a value but never used.","Identifier","unusedVar","'index' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Ssh' is defined but never used.","React Hook useEffect contains a call to 'isRunning'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [node, view, running, socket] as a second argument to the useEffect Hook.",["219"],"'Doughnut' is defined but never used.","'ToggleSwitch' is defined but never used.","'setView' is assigned a value but never used.","no-redeclare","'i' is already defined.","redeclared","no-dupe-keys","Duplicate key 'ticks'.","ObjectExpression","unexpected","'array' is assigned a value but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'dispatch' is assigned a value but never used.","'switchState' is assigned a value but never used.","'toggleState' is assigned a value but never used.","'value' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'apiCall' is defined but never used.","'useEffect' is defined but never used.","'useSelector' is defined but never used.","'useDispatch' is defined but never used.","'setNetwork' is defined but never used.","'upload' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"220","fix":"221"},{"desc":"222","fix":"223"},"Update the dependencies array to be: [getUser, saveSocket, setAppData, socket]",{"range":"224","text":"225"},"Add dependencies array: [node, view, running, socket]",{"range":"226","text":"227"},[1082,1084],"[getUser, saveSocket, setAppData, socket]",[1753,1753],", [node, view, running, socket]"]